local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")

local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local Islands = Workspace:WaitForChild("Islands")
local remote = ReplicatedStorage:WaitForChild("Communication"):WaitForChild("Events"):GetChildren()[10] -- adjust index if needed

-- List of tool UUIDs to try
local TOOL_UUIDs = {
    "{cd4c34c5-99a6-4f28-ac73-bfad7c8e1ca2}",
    "{4ba69e17-8de2-43a2-ac9a-f1d1e425be9b}",
    -- Add any others you know
}

-- All islands to scan
local islandConfigs = {
    ["Mainland"] = {},
    ["Forest Island"] = {},
    ["Mountain Island"] = {},
    ["Lunar Islands"] = {},
    ["Royal Island"] = {},
    ["Blizzard Island"] = {},
    ["Jungle Island"] = {},
    ["Volcano Island"] = {},
    ["Desert Island"] = {},
}

-- Exclusions: UUIDs or names that should not be targeted
local exclusions = {
    ["{84b93b68-b932-4db8-b765-d1bd9ef8aae9}"] = true,
    ["{c5769905-aecf-4d7a-ada9-064802b0cae9}"] = true,
    ["{d2227f02-c482-4911-b201-7e842b31c47c}"] = true,
    ["{6b019e60-21c6-4536-9a06-4cbfee80d88f}"] = true,
    ["{12916ad6-7fd9-46d5-8bc1-e69671249721}"] = true,
    ["{c91d0e3a-e8c6-4e70-b274-9b7304ffbb28}"] = true,
    ["Horse"] = true,
    ["Travel Boat"] = true,
}

-- Helper to check if a string is a UUID
local function isUUIDName(name)
    return typeof(name) == "string" and name:match("^%b{}$") ~= nil
end

-- Get player's root position
local function getPlayerPosition()
    local root = Character:FindFirstChild("HumanoidRootPart")
    if root then
        return root.Position
    end
end

-- Main loop
local autoCatchEnabled = true

task.spawn(function()
    while autoCatchEnabled do
        local playerPos = getPlayerPosition()

        if playerPos then
            -- Check all island folders
            for islandName in pairs(islandConfigs) do
                local islandFolder = Islands:FindFirstChild(islandName)
                if islandFolder then
                    for _, child in ipairs(islandFolder:GetChildren()) do
                        if isUUIDName(child.Name) and child:FindFirstChild("Body") and not exclusions[child.Name] then
                            local targetPart = child:FindFirstChild("Body")
                            local distance = (targetPart.Position - playerPos).Magnitude
                            if distance <= 10 then
                                for _, uuid in ipairs(TOOL_UUIDs) do
                                    remote:FireServer(uuid, "Activate", child)
                                    task.wait(0.01)
                                end
                            end
                        end
                    end
                end
            end

            -- Check Workspace UUID animals (not inside islands)
            for _, child in ipairs(Workspace:GetChildren()) do
                if isUUIDName(child.Name) and child:FindFirstChild("Body") and not exclusions[child.Name] then
                    local targetPart = child:FindFirstChild("Body")
                    local distance = (targetPart.Position - playerPos).Magnitude
                    if distance <= 15 then
                        for _, uuid in ipairs(TOOL_UUIDs) do
                            remote:FireServer(uuid, "Activate", child)
                            task.wait(0.01)
                        end
                    end
                end
            end
        end

        task.wait(0.01)
    end
end)
