local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")

local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()

-- === Known Tool UUIDs ===
local TOOL_UUIDS = {
    "{4ba69e17-8de2-43a2-ac9a-f1d1e425be9b}",
    "{634dc3c2-1694-4273-92d2-adf8f7ade91f}",
    "{51ba4466-f758-4d1c-970d-aad27326dbaf}",
    "{06905d54-7826-417e-bfc7-82d326a30885}",
    "{7138d7c4-9482-4257-868c-4bd1fd99f529}",
    "{5dab28e4-4bfb-430b-86fe-530bafa237b5}",
}

-- === UUIDs to exclude ===
local exclusions = {
    ["{84b93b68-b932-4db8-b765-d1bd9ef8aae9}"] = true,
    ["{c5769905-aecf-4d7a-ada9-064802b0cae9}"] = true,
    ["{d2227f02-c482-4911-b201-7e842b31c47c}"] = true,
    ["{6b019e60-21c6-4536-9a06-4cbfee80d88f}"] = true,
    ["{12916ad6-7fd9-46d5-8bc1-e69671249721}"] = true,
    ["{c91d0e3a-e8c6-4e70-b274-9b7304ffbb28}"] = true,
    ["{2c0549c7-f2d0-4828-bc2a-6d484e792cdd}"] = true,
    ["{de31ac95-029b-4c26-b9f8-4b61faed7335}"] = true,
    ["Horse"] = true,
    ["Travel Boat"] = true,
}

local ISLANDS = {
    "Mainland", "Forest Island", "Mountain Island", "Lunar Islands",
    "Royal Island", "Blizzard Island", "Jungle Island",
    "Volcano Island", "Desert Island"
}

-- Find the RemoteEvent
local remote = ReplicatedStorage:WaitForChild("Communication"):WaitForChild("Events"):GetChildren()[13]

-- Returns true if string is a UUID format "{xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx}"
local function isUUID(str)
    return typeof(str) == "string" and str:match("^%b{}$") ~= nil
end

-- Get player position safely
local function getPlayerPos()
    local char = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    local root = char:FindFirstChild("HumanoidRootPart")
    return root and root.Position
end

-- Main loop
while true do
    local pos = getPlayerPos()
    if pos then
        -- Check Islands
        local islandsFolder = Workspace:FindFirstChild("Islands")
        if islandsFolder then
            for _, islandName in ipairs(ISLANDS) do
                local island = islandsFolder:FindFirstChild(islandName)
                if island then
                    for _, model in ipairs(island:GetChildren()) do
                        if isUUID(model.Name) and not exclusions[model.Name] then
                            local body = model:FindFirstChild("Body")
                            if body and (body.Position - pos).Magnitude <= 15 then
                                for _, toolUUID in ipairs(TOOL_UUIDS) do
                                    remote:FireServer(toolUUID, "Activate", model)
                                end
                                print("Fired on", model.Name, "from", islandName)
                            end
                        end
                    end
                end
            end
        end

        -- Also check top-level UUIDs in Workspace
        for _, model in ipairs(Workspace:GetChildren()) do
            if isUUID(model.Name) and not exclusions[model.Name] then
                local body = model:FindFirstChild("Body")
                if body and (body.Position - pos).Magnitude <= 15 then
                    for _, toolUUID in ipairs(TOOL_UUIDS) do
                        remote:FireServer(toolUUID, "Activate", model)
                    end
                    print("Fired on workspace UUID model", model.Name)
                end
            end
        end
    end

    task.wait(0.05)
end
