local Players = game:GetService("Players")
local player = Players.LocalPlayer

-- Wait for PlayerGui to be ready
local playerGui = player:WaitForChild("PlayerGui")

local trainingIsland = workspace:WaitForChild("Islands"):WaitForChild("Training Island")
local trainingBody = trainingIsland:WaitForChild("{60f828f4-a916-4262-842e-7ddc49e07ad9}")
local routesFolder = trainingIsland
    :WaitForChild("Outdoor Arena")
    :WaitForChild("DynamicArena")
    :WaitForChild("_LAYOUT")
    :WaitForChild("CheckpointActivity")
    :WaitForChild("Routes")
    :WaitForChild("1")

-- Ensure PrimaryPart is set for the model
if not trainingBody.PrimaryPart then
    for _, part in pairs(trainingBody:GetChildren()) do
        if part:IsA("BasePart") then
            trainingBody.PrimaryPart = part
            break
        end
    end
end

if not trainingBody.PrimaryPart then
    warn("UUID model has no PrimaryPart")
    return
end

-- Create ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "TeleportToggleGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = playerGui

-- Create Toggle Button
local toggleButton = Instance.new("TextButton")
toggleButton.Size = UDim2.new(0, 200, 0, 50)
toggleButton.Position = UDim2.new(0, 20, 0, 20)
toggleButton.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
toggleButton.TextColor3 = Color3.new(1, 1, 1)
toggleButton.Font = Enum.Font.SourceSansBold
toggleButton.TextSize = 24
toggleButton.Text = "Start Teleport Loop"
toggleButton.Parent = screenGui

local looping = false
local teleportCoroutine

local function teleportToCheckpoint(part)
    if part and part:IsA("BasePart") then
        trainingBody:SetPrimaryPartCFrame(part.CFrame)
        if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            player.Character.HumanoidRootPart.CFrame = part.CFrame + Vector3.new(0, 5, 0)
        end
        print("Teleported to checkpoint:", part.Name)
    else
        warn("Checkpoint part not found or invalid:", part and part.Name or "nil")
    end
end

local function startLoop()
    looping = true
    toggleButton.Text = "Stop Teleport Loop"

    teleportCoroutine = coroutine.create(function()
        while looping do
            for i = 1, 6 do
                if not looping then break end

                local checkpoint = routesFolder:FindFirstChild(tostring(i))
                if checkpoint then
                    teleportToCheckpoint(checkpoint)
                    wait(2) -- wait 2 seconds between teleports
                else
                    warn("Checkpoint "..i.." missing")
                end
            end
        end
    end)

    coroutine.resume(teleportCoroutine)
end

local function stopLoop()
    looping = false
    toggleButton.Text = "Start Teleport Loop"
    if teleportCoroutine and coroutine.status(teleportCoroutine) == "suspended" then
        coroutine.close(teleportCoroutine)
    end
end

toggleButton.MouseButton1Click:Connect(function()
    if looping then
        stopLoop()
    else
        startLoop()
    end
end)
