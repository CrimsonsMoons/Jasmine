local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

-- GUI setup
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "TeleportToggleGui"
screenGui.Parent = PlayerGui
screenGui.ResetOnSpawn = false

local button = Instance.new("TextButton")
button.Size = UDim2.new(0, 140, 0, 50)
button.Position = UDim2.new(0, 20, 0, 20)
button.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
button.TextColor3 = Color3.new(1, 1, 1)
button.Font = Enum.Font.SourceSansBold
button.TextSize = 24
button.Text = "Start Teleport"
button.Parent = screenGui

local running = false
local teleportTask

local checkpointsFolder = workspace.Islands["Training Island"]["Outdoor Arena"].DynamicArena
    ._LAYOUT.CheckpointActivity.Routes

-- Map checkpoint name to custom wait times (seconds)
local checkpointWaits = {
    ["1"] = 1.5,
    ["2"] = 3,
    ["3"] = 2,
    ["4"] = 5,
    ["5"] = 1,
    ["6"] = 2.5,
}

local DEFAULT_WAIT = 2 -- default wait time if checkpoint name not in table

local function getAllCheckpoints()
    local checkpoints = {}

    for _, routeFolder in ipairs(checkpointsFolder:GetChildren()) do
        if routeFolder:IsA("Folder") then
            local sortedCheckpoints = {}

            for _, checkpoint in ipairs(routeFolder:GetChildren()) do
                if checkpoint:IsA("BasePart") then
                    table.insert(sortedCheckpoints, checkpoint)
                end
            end

            table.sort(sortedCheckpoints, function(a, b)
                return tonumber(a.Name) < tonumber(b.Name)
            end)

            for _, cp in ipairs(sortedCheckpoints) do
                table.insert(checkpoints, cp)
            end
        end
    end

    return checkpoints
end

local function teleportToCheckpoints()
    local checkpoints = getAllCheckpoints()
    local index = 1

    while running and #checkpoints > 0 do
        local checkpoint = checkpoints[index]
        if checkpoint then
            local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
            local HRP = character:WaitForChild("HumanoidRootPart")

            local targetPos = checkpoint.Position + Vector3.new(2, 3, 0)
            local targetCFrame = CFrame.new(targetPos)

            local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Linear)
            local tween = TweenService:Create(HRP, tweenInfo, {CFrame = targetCFrame})
            tween:Play()
            tween.Completed:Wait()

            local waitTime = checkpointWaits[checkpoint.Name] or DEFAULT_WAIT
            wait(waitTime)
        end

        index = index + 1
        if index > #checkpoints then
            checkpoints = getAllCheckpoints()
            index = 1
        end
    end
end

button.MouseButton1Click:Connect(function()
    if running then
        running = false
        button.Text = "Start Teleport"
        if teleportTask then
            teleportTask:Disconnect()
            teleportTask = nil
        end
    else
        running = true
        button.Text = "Stop Teleport"
        teleportTask = coroutine.wrap(teleportToCheckpoints)
        teleportTask()
    end
end)
