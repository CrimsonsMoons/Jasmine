local Players = game:GetService("Players")
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

local checkpoints = workspace.Islands["Training Island"]["Outdoor Arena"].DynamicArena
    :WaitForChild("_LAYOUT")
    :WaitForChild("CheckpointActivity")
    :WaitForChild("Routes")
    :WaitForChild("Checkpoints")

local checkpointOrder = {"1", "2", "3", "4"}
local teleportDelay = 0.4
local teleporting = false

-- Simple GUI Setup
local gui = Instance.new("ScreenGui")
gui.Parent = player:WaitForChild("PlayerGui")

local button = Instance.new("TextButton")
button.Size = UDim2.new(0, 100, 0, 30)
button.Position = UDim2.new(0, 10, 0, 10)
button.Text = "Start"
button.Parent = gui

-- Teleport loop
local function startTeleporting()
    teleporting = true
    button.Text = "Stop"
    while teleporting do
        for _, checkpointName in ipairs(checkpointOrder) do
            if not teleporting then break end
            local checkpoint = checkpoints:FindFirstChild(checkpointName)
            if checkpoint and checkpoint:IsA("BasePart") then
                humanoidRootPart.Anchored = true
                humanoidRootPart.CFrame = checkpoint.CFrame * CFrame.new(0, 1, 0)
                humanoidRootPart.Anchored = false
            end
            task.wait(teleportDelay)
        end
    end
    button.Text = "Start"
end

-- Button click toggle
button.MouseButton1Click:Connect(function()
    teleporting = not teleporting
    if teleporting then
        task.spawn(startTeleporting)
    end
end)
