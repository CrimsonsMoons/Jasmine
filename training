--// Services
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")

--// Player & Character
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local hrp = character:WaitForChild("HumanoidRootPart")

--// Cross Country checkpoint folder
local checkpointsFolder = workspace.Islands["Training Island"]["Cross Country"]
	.CheckpointActivity.Routes["1"]

--// Tween Settings
local tweenInfo = TweenInfo.new(1.2, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)
local isTweening = false
local currentTween = nil

--// GUI Setup
local gui = Instance.new("ScreenGui")
gui.Name = "CrossCountryTweenGui"
gui.ResetOnSpawn = false
gui.Parent = player:WaitForChild("PlayerGui")

-- Draggable frame (Top Left or saved position)
local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 200, 0, 60)

-- Restore saved position if it exists
local savedX = gui:GetAttribute("SavedPosX")
local savedY = gui:GetAttribute("SavedPosY")

if savedX and savedY then
	frame.Position = UDim2.new(0, savedX, 0, savedY)
else
	frame.Position = UDim2.new(0, 10, 0.02, 0) -- top-left default
end

frame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
frame.BorderSizePixel = 0
frame.Active = true
frame.Parent = gui

-- Rounded edges & stroke
Instance.new("UICorner", frame).CornerRadius = UDim.new(0, 12)
local stroke = Instance.new("UIStroke", frame)
stroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
stroke.Color = Color3.fromRGB(90, 90, 90)
stroke.Thickness = 1.5

-- Button inside frame
local button = Instance.new("TextButton")
button.Size = UDim2.new(1, -20, 1, -20)
button.Position = UDim2.new(0, 10, 0, 10)
button.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
button.TextColor3 = Color3.new(1, 1, 1)
button.Text = "Start Cross Country"
button.Font = Enum.Font.GothamBold
button.TextSize = 18
button.Parent = frame
Instance.new("UICorner", button).CornerRadius = UDim.new(0, 8)

-- Collect nested BaseParts in order
local function getAllCheckpoints(folder)
	local parts = {}

	local function collectParts(container)
		for _, item in ipairs(container:GetChildren()) do
			if item:IsA("BasePart") then
				table.insert(parts, item)
			elseif item:IsA("Folder") or item:IsA("Model") then
				collectParts(item)
			end
		end
	end

	collectParts(folder)
	return parts
end

-- Tween to a part
local function tweenTo(part)
	if currentTween then
		currentTween:Cancel()
	end
	local tween = TweenService:Create(hrp, tweenInfo, {CFrame = CFrame.new(part.Position)})
	currentTween = tween
	tween:Play()
	return tween
end

-- Tween sequence
local function tweenSequence()
	isTweening = true
	button.Text = "Stop"

	local parts = getAllCheckpoints(checkpointsFolder)

	for _, part in ipairs(parts) do
		if not isTweening then break end
		local tween = tweenTo(part)
		tween.Completed:Wait()
		task.wait(0.1)
	end

	isTweening = false
	button.Text = "Start Cross Country"
end

-- Button click toggle
button.MouseButton1Click:Connect(function()
	if isTweening then
		isTweening = false
		button.Text = "Start Cross Country"
		if currentTween then currentTween:Cancel() end
	else
		coroutine.wrap(tweenSequence)()
	end
end)

-- Better Drag Support
local dragging, dragInput, dragStart, startPos

frame.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		dragging = true
		dragStart = input.Position
		startPos = frame.Position

		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragging = false
			end
		end)
	end
end)

frame.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement then
		dragInput = input
	end
end)

UserInputService.InputChanged:Connect(function(input)
	if input == dragInput and dragging then
		local delta = input.Position - dragStart
		local newPos = startPos + UDim2.new(0, delta.X, 0, delta.Y)
		frame.Position = newPos
		gui:SetAttribute("SavedPosX", newPos.X.Offset)
		gui:SetAttribute("SavedPosY", newPos.Y.Offset)
	end
end)
