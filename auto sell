-- SERVICES
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local LocalPlayer = Players.LocalPlayer

-- ‚è≥ Wait until the backpack GUI exists
local function waitForInventoryList()
	local maxTries = 30
	while maxTries > 0 do
		local success, result = pcall(function()
			local contentList = LocalPlayer.PlayerGui.Menus.Backpack.Main.Inventory.Content.List
			return contentList
		end)
		if success and result then return result end
		maxTries -= 1
		task.wait(0.5)
	end
	warn("‚ùå Failed to find inventory content list.")
	return nil
end

-- üîç Find the correct UUID folder dynamically
local function getUUIDListFolder()
	local contentList = waitForInventoryList()
	if not contentList then return end

	for _, child in ipairs(contentList:GetChildren()) do
		local list = child:FindFirstChild("List")
		if list then
			for _, item in ipairs(list:GetChildren()) do
				if typeof(item.Name) == "string" and item.Name:match("^%b{}$") then
					return list
				end
			end
		end
	end

	warn("‚ö†Ô∏è No valid UUID folder found in inventory list.")
	return nil
end

-- üß† Try to detect the right SellItems RemoteEvent
local function findSellRemote()
	local events = ReplicatedStorage:WaitForChild("Communication", 9e9):WaitForChild("Events", 9e9)
	for _, remote in ipairs(events:GetChildren()) do
		if remote:IsA("RemoteEvent") then
			local success = pcall(function()
				remote:FireServer("SellItems", {}) -- harmless test
			end)
			if success then
				print("‚úÖ Found SellItems remote:", remote:GetFullName())
				return remote
			end
		end
	end
	warn("‚ùå Could not auto-detect SellItems remote.")
	return nil
end

local sellRemote = findSellRemote()

-- üì¶ UUID name checker
local function isUUID(name)
	return typeof(name) == "string" and name:match("^%b{}$") ~= nil
end

-- üí∞ Build sell table (skip Locked & Special)
local function buildSellTable(listFolder)
	local sellTable = {}
	for _, item in ipairs(listFolder:GetChildren()) do
		if isUUID(item.Name) and not item:FindFirstChild("Locked") and not item:FindFirstChild("SpecialIndicator") then
			sellTable[item.Name] = 1
		end
	end
	return sellTable
end

-- üöÄ Main sell loop
local function startAutoSellLoop(interval)
	while true do
		if sellRemote then
			local listFolder = getUUIDListFolder()
			if listFolder then
				local sellTable = buildSellTable(listFolder)
				if next(sellTable) then
					sellRemote:FireServer("SellItems", sellTable)
					print("‚úÖ Auto-sold:", sellTable)
				else
					print("‚ö†Ô∏è No sellable items found.")
				end
			end
		end
		task.wait(interval)
	end
end

-- üîÅ Start the loop (adjust interval here)
startAutoSellLoop(5) -- every 5 seconds
