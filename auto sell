local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local LocalPlayer = Players.LocalPlayer

-- Use the known working index you tested (update if needed)
local sellRemote = ReplicatedStorage:WaitForChild("Communication", 9e9)
    :WaitForChild("Events", 9e9):GetChildren()[17] -- ✅ Change this if needed

-- List folder with UUIDs
local listFolder = LocalPlayer:WaitForChild("PlayerGui")
    :WaitForChild("Menus")
    :WaitForChild("Backpack")
    :WaitForChild("Main")
    :WaitForChild("Inventory")
    :WaitForChild("Content")
    :WaitForChild("List"):GetChildren()[9]
    :WaitForChild("List")

-- Check if the name is UUID format
local function isUUID(name)
    return typeof(name) == "string" and name:match("^%b{}$") ~= nil
end

-- Sell function with debug
local function sellAllUnlocked()
    local sellTable = {}

    for _, item in ipairs(listFolder:GetChildren()) do
        local isLocked = item:FindFirstChild("Locked")
        local isSpecial = item:FindFirstChild("SpecialIndicator")

        if isUUID(item.Name) and not isLocked and not isSpecial then
            sellTable[item.Name] = 1
        end
    end

    if next(sellTable) then
        print("✅ Attempting to sell:", sellTable)

        local args = {
            [1] = "SellItems",
            [2] = sellTable
        }

        sellRemote:FireServer(unpack(args))
    else
        warn("⚠️ Nothing to sell: either all locked/special or missing UUIDs.")
    end
end

-- Run every 5 seconds
while true do
    sellAllUnlocked()
    task.wait(5)
end
