-- Full GUI Script with Respawn Handling and All Features
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera

-- GUI Library
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
local Window = Library.CreateLib("Island Tools", "DarkTheme")

-- Persistent State
local state = {
    autoSell3 = false,
    autoSell4 = false,
    catch123 = false,
    catch456 = false,
    catch789 = false,
    islandTravel = false,
    lunarTeleport = false,
    volcanoTeleport = false,
    removeLava = false,
}

-- === Helper Functions === --
local exclusions = {
    ["2c0549c7-f2d0-4828-bc2a-6d484e792cdd"] = true,
    ["de31ac95-029b-4c26-b9f8-4b61faed7335"] = true
}

local function teleportToBodies(folder)
    for _, island in ipairs(folder:GetChildren()) do
        if exclusions[island.Name] then continue end
        local body = island:FindFirstChild("Body")
        if body and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
            LocalPlayer.Character.HumanoidRootPart.CFrame = body.CFrame + Vector3.new(0, 5, 0)
            task.wait(1)
        end
    end
end

-- === Main Tab === --
local MainTab = Window:NewTab("Main")
local MainSection = MainTab:NewSection("Teleport & Sell")

MainSection:NewToggle("Island Travel", "Teleport to island Body parts", function(t)
    state.islandTravel = t
    if t then
        coroutine.wrap(function()
            while state.islandTravel do
                teleportToBodies(workspace)
                if workspace:FindFirstChild("Islands") then
                    teleportToBodies(workspace.Islands)
                end
                task.wait(5)
            end
        end)()
    end
end)

MainSection:NewButton("Sell Specials", "One-time sell", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/CrimsonsMoons/Jasmine/refs/heads/main/Sell%20Specials", true))()
end)

MainSection:NewToggle("Auto Sell 3", "Loops auto sell", function(v)
    state.autoSell3 = v
    if v then
        coroutine.wrap(function()
            while state.autoSell3 do
                loadstring(game:HttpGet("https://raw.githubusercontent.com/CrimsonsMoons/Jasmine/main/AutoSell3"))()
                task.wait(0.5)
            end
        end)()
    end
end)

MainSection:NewToggle("Auto Sell 4", "Loops auto sell", function(v)
    state.autoSell4 = v
    if v then
        coroutine.wrap(function()
            while state.autoSell4 do
                loadstring(game:HttpGet("https://raw.githubusercontent.com/CrimsonsMoons/Jasmine/main/AutoSell4"))()
                task.wait(0.5)
            end
        end)()
    end
end)

-- === Auto Catch Tab === --
local CatchTab = Window:NewTab("Auto Catch")
local CatchSection = CatchTab:NewSection("Catch Modes")

CatchSection:NewToggle("Catch Islands 1-3", "", function(v)
    state.catch123 = v
    if v then loadstring(game:HttpGet("https://raw.githubusercontent.com/CrimsonsMoons/Jasmine/refs/heads/main/Auto%20Catch%201"))() end
end)

CatchSection:NewToggle("Catch Islands 4-6", "", function(v)
    state.catch456 = v
    if v then loadstring(game:HttpGet("https://raw.githubusercontent.com/CrimsonsMoons/Jasmine/refs/heads/main/Auto%20Catch%202"))() end
end)

CatchSection:NewToggle("Catch Islands 7-9", "", function(v)
    state.catch789 = v
    if v then loadstring(game:HttpGet("https://raw.githubusercontent.com/CrimsonsMoons/Jasmine/refs/heads/main/Auto%20Catch%203"))() end
end)

-- === Lunar / Volcano Tab === --
local IslandTab = Window:NewTab("Lunar/Volcano")
local IslandSection = IslandTab:NewSection("Exploration")

local lunarPoints = {
    Vector3.new(-3097, 17, -3681), Vector3.new(-2759, 6, -2589),
    Vector3.new(-2207, 139, -1223), Vector3.new(-3266, 15, -1436),
    Vector3.new(-3357, 24, -2428)
}

local volcanoPoints = {
    Vector3.new(2964, 108, -7078), Vector3.new(4134, 27, -6894),
    Vector3.new(4757, 26, -7939), Vector3.new(3487, 21, -8586)
}

local function exploreAndTeleport(points, stateKey)
    coroutine.wrap(function()
        for _, pos in ipairs(points) do
            if not state[stateKey] then break end
            if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
                LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(pos + Vector3.new(0, 6, 0))
            end
            local found = false
            for _, folder in ipairs({workspace, workspace:FindFirstChild("Islands")}) do
                if folder then
                    for _, obj in ipairs(folder:GetChildren()) do
                        if not exclusions[obj.Name] and obj:FindFirstChild("Body") then
                            found = true
                        end
                    end
                end
            end
            task.wait(found and 15 or 0.5)
        end
    end)()
end

IslandSection:NewToggle("Lunar Island", "Explores Lunar", function(v)
    state.lunarTeleport = v
    if v then exploreAndTeleport(lunarPoints, "lunarTeleport") end
end)

IslandSection:NewToggle("Volcano Island", "Explores Volcano", function(v)
    state.volcanoTeleport = v
    if v then exploreAndTeleport(volcanoPoints, "volcanoTeleport") end
end)

-- === Remove Lava === --
IslandSection:NewButton("Remove Lava", "Deletes Lava Hitboxes every 5s", function()
    state.removeLava = true
    coroutine.wrap(function()
        while state.removeLava do
            local folder = workspace:WaitForChild("Islands"):WaitForChild("Volcano Island")
                :WaitForChild("LavaParts"):WaitForChild("Folder")
            for _, part in ipairs(folder:GetChildren()) do
                if part:IsA("BasePart") then
                    for _, child in ipairs(part:GetChildren()) do
                        if child:IsA("TouchTransmitter") then
                            child:Destroy()
                        end
                    end
                end
            end
            task.wait(5)
        end
    end)()
end)

-- === Respawn Recovery === --
LocalPlayer.CharacterAdded:Connect(function(char)
    task.wait(2)
    if state.islandTravel then
        coroutine.wrap(function()
            while state.islandTravel do
                teleportToBodies(workspace)
                if workspace:FindFirstChild("Islands") then
                    teleportToBodies(workspace.Islands)
                end
                task.wait(5)
            end
        end)()
    end
end)
