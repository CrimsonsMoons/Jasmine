-- Load Kavo UI Library
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
local Window = Library.CreateLib("Ultimate Island GUI", "DarkTheme")

-- Services
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")
local Workspace = game:GetService("Workspace")

-- Main Tab
local mainTab = Window:NewTab("Main")
local mainSection = mainTab:NewSection("Island Teleports")

local islands = {
    ["Jungle Island"] = "{de07d6c1-fa49-440a-bb41-b1cca478bc37}",
    ["Mainland"] = "{9909a6c0-6598-41d1-9500-1146bf44b139}",
    ["Forest Island"] = "{f44b4013-62f2-40e3-8c79-f71e1b26526c}"
    -- Add more islands as needed
}

for name, uuid in pairs(islands) do
    mainSection:NewToggle(name, "Teleports to bodies", function(state)
        _G["Island_" .. name] = state
        while _G["Island_" .. name] and wait(0.2) do
            for _, folder in ipairs({Workspace:IsA("Folder") and Workspace:IsDescendantsOf("Islands") and Workspace:Islands or {}, Workspace, Workspace:FindFirstChild("Explorer") or {}}) do
                for _, v in ipairs(folder:GetDescendants()) do
                    if v:IsA("Model") and v.Name == "Body" and v:FindFirstChild("Position") then
                        if tostring(v.Parent) == uuid then
                            HumanoidRootPart.CFrame = v.Position.CFrame
                            wait(0.4)
                        end
                    end
                end
            end
        end
    end)
end

-- Auto Tab
local autoTab = Window:NewTab("Auto")
local autoSection = autoTab:NewSection("Auto Functions")

-- Auto Sell
autoSection:NewToggle("Auto Sell", "Auto sells regular horses", function(state)
    _G.AutoSell = state
    spawn(function()
        while _G.AutoSell do
            pcall(function()
                loadstring(game:HttpGet("https://raw.githubusercontent.com/CrimsonsMoons/Jasmine/refs/heads/main/Auto%20Sell", true))()
            end)
            wait(2.5)
        end
    end)
end)

-- Sell Specials
autoSection:NewToggle("Sell Specials", "Auto sells special horses", function(state)
    _G.SellSpecials = state
    spawn(function()
        while _G.SellSpecials do
            pcall(function()
                loadstring(game:HttpGet("https://raw.githubusercontent.com/CrimsonsMoons/Jasmine/refs/heads/main/Sell%20Specials", true))()
            end)
            wait(2.5)
        end
    end)
end)

-- Auto Catch Toggles
local autoCatches = {
    ["1,2,3"] = "Auto%20Catch%201",
    ["4,5,6"] = "Auto%20Catch%202",
    ["7,8,9"] = "Auto%20Catch%203"
}

for label, file in pairs(autoCatches) do
    autoSection:NewToggle(label, "Auto Catch toggle", function(state)
        _G["Catch_" .. label] = state
        spawn(function()
            while _G["Catch_" .. label] do
                pcall(function()
                    loadstring(game:HttpGet("https://raw.githubusercontent.com/CrimsonsMoons/Jasmine/refs/heads/main/" .. file, true))()
                end)
                wait(3)
            end
        end)
    end)
end

-- Travel Tab
local travelTab = Window:NewTab("Travel")
local travelSection = travelTab:NewSection("Area Travel")
travelSection:NewLabel("(Optional space for future travel systems)")

-- Lunar/Volcano Tab
local lvTab = Window:NewTab("Lunar/Volcano")
local lvSection = lvTab:NewSection("Exploration")

local function createExploreToggle(label, positions)
    lvSection:NewToggle(label, "Explore island positions", function(state)
        _G[label] = state
        spawn(function()
            local i = 1
            while _G[label] and i <= #positions do
                local pos = positions[i]
                HumanoidRootPart.CFrame = CFrame.new(pos)
                wait(2)
                local bodyFound = false
                for _, folder in ipairs({Workspace, Workspace:FindFirstChild("Explorer")}) do
                    for _, v in ipairs(folder:GetDescendants()) do
                        if v:IsA("Model") and v.Name == "Body" and v:FindFirstChild("Position") then
                            bodyFound = true
                            break
                        end
                    end
                    if bodyFound then break end
                end
                if not bodyFound then
                    i += 1
                else
                    while bodyFound and _G[label] do
                        wait(1)
                        bodyFound = false
                        for _, folder in ipairs({Workspace, Workspace:FindFirstChild("Explorer")}) do
                            for _, v in ipairs(folder:GetDescendants()) do
                                if v:IsA("Model") and v.Name == "Body" and v:FindFirstChild("Position") then
                                    bodyFound = true
                                    break
                                end
                            end
                        end
                    end
                    i += 1
                end
                wait(1)
            end
        end)
    end)
end

createExploreToggle("Lunar Island", {
    Vector3.new(-3097.42, 17.63, -3681.29),
    Vector3.new(-2759.49, 6.74, -2589.20),
    Vector3.new(-2207.14, 139.06, -1223.94),
    Vector3.new(-3266.90, 15.43, -1436.56),
    Vector3.new(-3357.76, 24.35, -2428.62)
})

createExploreToggle("Volcano Island", {
    Vector3.new(2964.75, 108.95, -7078.36),
    Vector3.new(4134.52, 27.05, -6894.68),
    Vector3.new(4757.52, 26.14, -7939.01),
    Vector3.new(3487.48, 21, -8586.86)
})

-- Remove Lava Button
lvSection:NewButton("Remove Lava", "Destroys lava touch triggers", function()
    spawn(function()
        while true do
            pcall(function()
                local folder = workspace:WaitForChild("Islands"):WaitForChild("Volcano Island")
                    :WaitForChild("LavaParts"):WaitForChild("Folder")
                for _, part in ipairs(folder:GetChildren()) do
                    if part:IsA("BasePart") then
                        for _, child in ipairs(part:GetChildren()) do
                            if child:IsA("TouchTransmitter") then
                                child:Destroy()
                            end
                        end
                    end
                end
            end)
            wait(5)
        end
    end)
end)

-- Character Reset Handler
LocalPlayer.CharacterAdded:Connect(function(char)
    Character = char
    HumanoidRootPart = char:WaitForChild("HumanoidRootPart")
end)
