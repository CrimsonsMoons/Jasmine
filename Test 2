local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
local Window = Library.CreateLib("Island GUI", "DarkTheme")

-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")
local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()

-- State
local activeTeleports = {}
local autoSellEnabled = false
local sellLoopConn
local exclusions = {
    ["2c0549c7-f2d0-4828-bc2a-6d484e792cdd"] = true,
    ["de31ac95-029b-4c26-b9f8-4b61faed7335"] = true
}

-- Helper function: Teleport to UUID.Body in Workspace and Workspace.Explorer
local function teleportToUUIDBody(uuid)
    for _, container in ipairs({Workspace, Workspace:FindFirstChild("Explorer")}) do
        if container then
            local instance = container:FindFirstChild(uuid)
            if instance and instance:FindFirstChild("Body") then
                Character:PivotTo(instance.Body.CFrame)
                return true
            end
        end
    end
    return false
end

-- Helper: Teleport chain
local function teleportToPositions(label, positions)
    coroutine.wrap(function()
        activeTeleports[label] = true
        while activeTeleports[label] do
            for _, pos in ipairs(positions) do
                if not activeTeleports[label] then break end
                Character:PivotTo(CFrame.new(pos))
                local start = tick()
                while tick() - start < 15 do
                    if not activeTeleports[label] then break end
                    local found = false
                    for _, item in ipairs(Workspace:GetDescendants()) do
                        if item:IsA("Model") and item:FindFirstChild("Body") and not exclusions[item.Name] then
                            Character:PivotTo(item.Body.CFrame)
                            found = true
                            break
                        end
                    end
                    if not found then break end
                    task.wait(0.5)
                end
            end
            task.wait(0.5)
        end
    end)()
end

-- Helper: Stop teleport
local function stopTeleport(label)
    activeTeleports[label] = false
end

-- Helper: Sell script
local function startAutoSell()
    autoSellEnabled = true
    sellLoopConn = RunService.Heartbeat:Connect(function()
        if not autoSellEnabled then return end
        local sellRemote = ReplicatedStorage:WaitForChild("Communication"):WaitForChild("Events"):GetChildren()[17]
        local listFolder = LocalPlayer:WaitForChild("PlayerGui").Menus.Backpack.Main.Inventory.Content.List:GetChildren()[9].List
        local sellTable = {}

        for _, item in ipairs(listFolder:GetChildren()) do
            if item:FindFirstChild("Locked") or item:FindFirstChild("SpecialIndicator") or not item.Name:match("^%b{}$") then continue end
            sellTable[item.Name] = 1
        end

        if next(sellTable) then
            sellRemote:FireServer("SellItems", sellTable)
        end
    end)
end

local function stopAutoSell()
    autoSellEnabled = false
    if sellLoopConn then sellLoopConn:Disconnect() end
end

-- Tabs
local mainTab = Window:NewTab("Main")
local mainSection = mainTab:NewSection("Teleport")

mainSection:NewToggle("Jungle Island", "Teleport to Jungle", function(state)
    if state then
        for _, folder in ipairs(Workspace:GetDescendants()) do
            if folder:IsA("Folder") and folder.Name == "Jungle Island" then
                for _, obj in ipairs(folder:GetDescendants()) do
                    if exclusions[obj.Name] then continue end
                    if obj:IsA("Model") and obj:FindFirstChild("Body") then
                        Character:PivotTo(obj.Body.CFrame)
                        break
                    end
                end
            end
        end
    end
end)

mainSection:NewToggle("Mainland", "Teleport to Mainland", function(state)
    if state then
        local mainland = Workspace:FindFirstChild("Islands"):FindFirstChild("Mainland")
        for _, obj in ipairs(mainland:GetDescendants()) do
            if exclusions[obj.Name] then continue end
            if obj:IsA("Model") and obj:FindFirstChild("Body") then
                Character:PivotTo(obj.Body.CFrame)
                break
            end
        end
    end
end)

-- Travel Tab
local travelTab = Window:NewTab("Travel")
local travelSection = travelTab:NewSection("Island Travel")

travelSection:NewButton("Travel All UUIDs", "Teleport to all UUID.Body", function()
    for _, folder in ipairs(Workspace:GetDescendants()) do
        if folder:IsA("Folder") then
            for _, obj in ipairs(folder:GetDescendants()) do
                if exclusions[obj.Name] then continue end
                if obj:IsA("Model") and obj:FindFirstChild("Body") then
                    Character:PivotTo(obj.Body.CFrame)
                    task.wait(0.25)
                end
            end
        end
    end
end)

-- Train Tab
local trainTab = Window:NewTab("Train")
local trainSection = trainTab:NewSection("Catch")

trainSection:NewToggle("Islands 1,2,3", "Auto Catch 1", function(state)
    if state then
        loadstring(game:HttpGet("https://raw.githubusercontent.com/CrimsonsMoons/Jasmine/refs/heads/main/Auto%20Catch%201", true))()
    end
end)

trainSection:NewToggle("4,5,6", "Auto Catch 2", function(state)
    if state then
        loadstring(game:HttpGet("https://raw.githubusercontent.com/CrimsonsMoons/Jasmine/refs/heads/main/Auto%20Catch%202", true))()
    end
end)

trainSection:NewToggle("7,8,9", "Auto Catch 3", function(state)
    if state then
        loadstring(game:HttpGet("https://raw.githubusercontent.com/CrimsonsMoons/Jasmine/refs/heads/main/Auto%20Catch%203", true))()
    end
end)

-- Auto Tab
local autoTab = Window:NewTab("Auto")
local autoSection = autoTab:NewSection("Selling")

autoSection:NewToggle("Sell All", "Sell unlocked items", function(state)
    if state then
        startAutoSell()
    else
        stopAutoSell()
    end
end)

autoSection:NewButton("Sell Specials", "Sell special items", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/CrimsonsMoons/Jasmine/refs/heads/main/Sell%20Specials", true))()
end)

-- Lunar/Volcano Tab
local lvTab = Window:NewTab("Lunar/Volcano")
local lvSection = lvTab:NewSection("Exploration")

lvSection:NewToggle("Lunar Island", "Explore Lunar", function(state)
    if state then
        teleportToPositions("Lunar", {
            Vector3.new(-3097,18,-3681),
            Vector3.new(-2759,7,-2589),
            Vector3.new(-2207,139,-1223),
            Vector3.new(-3266,15,-1436),
            Vector3.new(-3357,24,-2428)
        })
    else
        stopTeleport("Lunar")
    end
end)

lvSection:NewToggle("Volcano Island", "Explore Volcano", function(state)
    if state then
        teleportToPositions("Volcano", {
            Vector3.new(2964,108,-7078),
            Vector3.new(4134,27,-6894),
            Vector3.new(4757,26,-7939),
            Vector3.new(3487,20,-8586)
        })
    else
        stopTeleport("Volcano")
    end
end)

lvSection:NewButton("Remove Lava", "Remove Lava Touch", function()
    coroutine.wrap(function()
        while true do
            local folder = Workspace:WaitForChild("Islands"):WaitForChild("Volcano Island")
                :WaitForChild("LavaParts"):WaitForChild("Folder")
            for _, part in ipairs(folder:GetChildren()) do
                if part:IsA("BasePart") then
                    for _, child in ipairs(part:GetChildren()) do
                        if child:IsA("TouchTransmitter") then
                            child:Destroy()
                        end
                    end
                end
            end
            task.wait(5)
        end
    end)()
end)

-- Reapply script on reset
LocalPlayer.CharacterAdded:Connect(function(char)
    Character = char
end)
