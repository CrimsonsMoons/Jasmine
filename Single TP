local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local HRP = Character:WaitForChild("HumanoidRootPart")

local checkpointsFolder = workspace.Islands["Training Island"]["Outdoor Arena"].DynamicArena
    ._LAYOUT.CheckpointActivity.Routes.Checkpoints

local uuids = {
    "{60f828f4-a916-4262-842e-7ddc49e07ad9}",
    "{c5769905-aecf-4d7a-ada9-064802b0cae9}",
    "{d2227f02-c482-4911-b201-7e842b31c47c}",
    "{6b019e60-21c6-4536-9a06-4cbfee80d88f}",
    "{12916ad6-7fd9-46d5-8bc1-e69671249721}",
}

local function getNPCModels()
    local islandFolder = workspace.Islands["Training Island"]
    local npcs = {}
    for _, uuid in ipairs(uuids) do
        local npc = islandFolder:FindFirstChild(uuid)
        if npc and npc:IsA("Model") then
            if not npc.PrimaryPart then
                local root = npc:FindFirstChild("HumanoidRootPart") or npc:FindFirstChildWhichIsA("BasePart")
                if root then npc.PrimaryPart = root end
            end
            if npc.PrimaryPart then
                table.insert(npcs, npc)
            end
        end
    end
    return npcs
end

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "TeleportToggleGui"
screenGui.Parent = PlayerGui
screenGui.ResetOnSpawn = false

local button = Instance.new("TextButton")
button.Size = UDim2.new(0, 140, 0, 50)
button.Position = UDim2.new(0, 20, 0, 20)
button.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
button.TextColor3 = Color3.new(1, 1, 1)
button.Font = Enum.Font.SourceSansBold
button.TextSize = 24
button.Text = "Start Teleport"
button.Parent = screenGui

local running = false
local teleportTask

local order = {"1", "2", "3", "4"}

local function teleportAllToCheckpoint(checkpointName, npcs)
    local checkpoint = checkpointsFolder:FindFirstChild(checkpointName)
    if not checkpoint or not checkpoint:IsA("BasePart") then
        warn("Checkpoint '" .. checkpointName .. "' not found.")
        return
    end

    HRP.CFrame = checkpoint.CFrame + Vector3.new(2, 3, 0)

    for i, npcModel in ipairs(npcs) do
        if npcModel and npcModel.PrimaryPart then
            local offsetX = -2 - (i * 3)
            npcModel:SetPrimaryPartCFrame(checkpoint.CFrame + Vector3.new(offsetX, 3, 0))
        end
    end
    print("Teleported player +", #npcs, "NPCs to checkpoint:", checkpointName)
end

local function startTeleportLoop()
    teleportTask = task.spawn(function()
        while running do
            local npcs = getNPCModels()
            for i, checkpointName in ipairs(order) do
                if not running then break end
                teleportAllToCheckpoint(checkpointName, npcs)
                if not running then break end

                if i == 1 then
                    task.wait(0.9)
                elseif i == 3 then
                    task.wait(1)
                elseif i == 4 then
                    task.wait(1)
                else
                    task.wait(0.6)
                end
            end
        end
    end)
end

button.MouseButton1Click:Connect(function()
    if running then
        running = false
        button.Text = "Start Teleport"
        print("Teleport loop stopped.")
    else
        running = true
        button.Text = "Stop Teleport"
        print("Teleport loop started.")
        startTeleportLoop()
    end
end)
