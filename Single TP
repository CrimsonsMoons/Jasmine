local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local HRP = Character:WaitForChild("HumanoidRootPart")

local uuid = "{60f828f4-a916-4262-842e-7ddc49e07ad9}"
local npcModel = workspace:Islands()["Training Island"]:FindFirstChild(uuid)

local checkpointsFolder = workspace.Islands["Training Island"]["Outdoor Arena"].DynamicArena
    ._LAYOUT.CheckpointActivity.Routes.Checkpoints

if npcModel and not npcModel.PrimaryPart then
    local root = npcModel:FindFirstChild("HumanoidRootPart") or npcModel:FindFirstChildWhichIsA("BasePart")
    if root then npcModel.PrimaryPart = root end
end

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "TeleportToggleGui"
screenGui.Parent = PlayerGui
screenGui.ResetOnSpawn = false
screenGui.Enabled = true

local button = Instance.new("TextButton")
button.Size = UDim2.new(0, 140, 0, 50)
button.Position = UDim2.new(0, 20, 0, 20)
button.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
button.TextColor3 = Color3.new(1, 1, 1)
button.Font = Enum.Font.SourceSansBold
button.TextSize = 24
button.Text = "Start Teleport"
button.Parent = screenGui

local running = false
local teleportTask

local function teleportBothToCheckpoint(checkpointName)
    if not npcModel or not npcModel.PrimaryPart then return end
    local checkpoint = checkpointsFolder:FindFirstChild(checkpointName)
    if checkpoint and checkpoint:IsA("BasePart") then
        HRP.CFrame = checkpoint.CFrame + Vector3.new(2, 3, 0)
        npcModel:SetPrimaryPartCFrame(checkpoint.CFrame + Vector3.new(-2, 3, 0))
        print("Teleported to checkpoint:", checkpointName)
    else
        warn("Checkpoint '" .. checkpointName .. "' not found.")
    end
end

local order = {"1", "2", "3", "4"}

local function startTeleportLoop()
    teleportTask = task.spawn(function()
        while running do
            for i, checkpointName in ipairs(order) do
                if not running then break end
                teleportBothToCheckpoint(checkpointName)
                if not running then break end

                if i == 1 then
                    task.wait(0.9)
                elseif i == 3 then
                    task.wait(1)
                elseif i == 4 then
                    task.wait(1)
                else
                    task.wait(0.6)
                end
            end
        end
    end)
end

button.MouseButton1Click:Connect(function()
    if running then
        running = false
        button.Text = "Start Teleport"
        print("Teleport loop stopped.")
    else
        -- Refresh npcModel in case it changed
        npcModel = workspace.Islands["Training Island"]:FindFirstChild(uuid)
        if npcModel and not npcModel.PrimaryPart then
            local root = npcModel:FindFirstChild("HumanoidRootPart") or npcModel:FindFirstChildWhichIsA("BasePart")
            if root then npcModel.PrimaryPart = root end
        end

        running = true
        button.Text = "Stop Teleport"
        print("Teleport loop started.")
        startTeleportLoop()
    end
end)
-----
