-- === GUI Library Setup ===
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
local Window = Library.CreateLib("All Islands Teleport", "DarkTheme")

-- === Tabs ===
local TeleportTab = Window:NewTab("Main")
local TeleportSection = TeleportTab:NewSection("Teleport Controls")

local TravelTab = Window:NewTab("Island Travel")
local TravelSection = TravelTab:NewSection("Quick TP Buttons")

local TrainTab = Window:NewTab("Train")
local TrainSection = TrainTab:NewSection("Training Features")

local AutoTab = Window:NewTab("Auto")
local AutoSection = AutoTab:NewSection("Automation")

local ShopTab = Window:NewTab("Shop")
local ShopSection = ShopTab:NewSection("Shop Items")

local LunarVolcanoTab = Window:NewTab("Lunar/Volcano")
local LunarVolcanoSection = LunarVolcanoTab:NewSection("Special Teleports & Lava")

-- === Initialization ===
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local hrp = character:WaitForChild("HumanoidRootPart")
local islandsFolder = workspace:WaitForChild("Islands")
local explorerFolder = workspace:FindFirstChild("Explorer")

player.CharacterAdded:Connect(function(newChar)
    character = newChar
    hrp = character:WaitForChild("HumanoidRootPart")
end)

-- === Island Configuration ===
local exclusions = {
    ["{84b93b68-b932-4db8-b765-d1bd9ef8aae9}"] = true,
    ["{c5769905-aecf-4d7a-ada9-064802b0cae9}"] = true,
    ["{d2227f02-c482-4911-b201-7e842b31c47c}"] = true,
    ["{6b019e60-21c6-4536-9a06-4cbfee80d88f}"] = true,
    ["{12916ad6-7fd9-46d5-8bc1-e69671249721}"] = true,
    ["{2c0549c7-f2d0-4828-bc2a-6d484e792cdd}"] = true,
    ["{de31ac95-029b-4c26-b9f8-4b61faed7335}"] = true,
    ["horse"] = true,
    ["travel boat"] = true,
    ["c21e5cba-8957-4d65-9e54-1aaa2411a71c"] = true,
}

local islandConfigs = {}
for _, name in ipairs({"Mainland", "Forest Island", "Mountain Island", "Lunar Islands", "Royal Island", "Blizzard Island", "Jungle Island", "Volcano Island", "Desert Island"}) do
    islandConfigs[name] = setmetatable({}, { __index = exclusions })
end

-- === Teleport Toggles for Islands in Main Tab ===
local teleportToggles = {}
for islandName, excludedIds in pairs(islandConfigs) do
    teleportToggles[islandName] = false
    TeleportSection:NewToggle("Teleport " .. islandName, "Teleport to " .. islandName, function(state)
        teleportToggles[islandName] = state
    end)

    task.spawn(function()
        while true do
            if teleportToggles[islandName] then
                local folder = islandsFolder:FindFirstChild(islandName) or (explorerFolder and explorerFolder:FindFirstChild(islandName))
                if not folder then warn("Island not found: " .. islandName) break end
                for _, model in ipairs(folder:GetChildren()) do
                    if not teleportToggles[islandName] then break end
                    local modelName = model.Name:lower()
                    if excludedIds[modelName] or modelName:find("c21") then continue end
                    local body = model:FindFirstChild("Body")
                    if body and body:IsA("BasePart") then
                        while teleportToggles[islandName] and body:IsDescendantOf(workspace) do
                            hrp.CFrame = CFrame.new(body.Position + Vector3.new(0,5,0))
                            task.wait(0.05)
                        end
                    end
                    task.wait(0.1)
                end
            else
                task.wait(0.5)
            end
        end
    end)
end

-- === Travel Buttons ===
for islandName in pairs(islandConfigs) do
    TravelSection:NewButton("Travel to " .. islandName, "Use teleport remote", function()
        local args = {"\1", "Travel", islandName, 1}
        game:GetService("ReplicatedStorage"):WaitForChild("Communication", 9e9)
            :WaitForChild("Functions", 9e9):GetChildren()[2]:FireServer(unpack(args))
    end)
end

-- === Training Buttons ===
TrainSection:NewButton("Single", "Runs Single Route Script", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/CrimsonsMoons/WHI/refs/heads/main/Tab%3ATrain%3ASingle"))()
end)
TrainSection:NewButton("Trap Character", "Creates a red box around your character", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/CrimsonsMoons/WHI/refs/heads/main/box"))()
end)

-- === Auto Catch Toggles ===
AutoSection:NewToggle("Islands 1,2,3", "Auto Catch Script", function(state)
    if state then loadstring(game:HttpGet("https://raw.githubusercontent.com/CrimsonsMoons/Jasmine/refs/heads/main/Auto%20Catch%201"))() end
end)
AutoSection:NewToggle("4,5,6", "Auto Catch Script 2", function(state)
    if state then loadstring(game:HttpGet("https://raw.githubusercontent.com/CrimsonsMoons/Jasmine/refs/heads/main/Auto%20Catch%202", true))() end
end)
AutoSection:NewToggle("7,8,9", "Auto Catch Script 3", function(state)
    if state then loadstring(game:HttpGet("https://raw.githubusercontent.com/CrimsonsMoons/Jasmine/refs/heads/main/Auto%20Catch%203", true))() end
end)

-- === Sell Toggles ===
AutoSection:NewToggle("Sell Specials", "Sell all special (unlocked) items every 5s", function(toggle)
    if toggle then
        task.spawn(function()
            while toggle do
                loadstring(game:HttpGet("https://raw.githubusercontent.com/CrimsonsMoons/Jasmine/refs/heads/main/Sell%20Specials", true))()
                task.wait(5)
            end
        end)
    end
end)
AutoSection:NewToggle("Auto Sell", "Sells all unlocked, non-special items every 5s", function(toggle)
    if toggle then
        task.spawn(function()
            while toggle do
                loadstring(game:HttpGet("https://raw.githubusercontent.com/CrimsonsMoons/Jasmine/refs/heads/main/auto%20sell2", true))()
                task.wait(5)
            end
        end)
    end
end)
AutoSection:NewToggle("Auto Sell 3", "Loop auto sell3 every 0.5 seconds", function(state)
    if state then
        task.spawn(function()
            while state do
                loadstring(game:HttpGet("https://raw.githubusercontent.com/CrimsonsMoons/Jasmine/refs/heads/main/auto%20sell3", true))()
                task.wait(0.5)
            end
        end)
    end
end)
AutoSection:NewToggle("Auto Sell 4", "Loop auto sell4 every 0.5 seconds", function(state)
    if state then
        task.spawn(function()
            while state do
                loadstring(game:HttpGet("https://raw.githubusercontent.com/CrimsonsMoons/Jasmine/refs/heads/main/auto%20sell4", true))()
                task.wait(0.5)
            end
        end)
    end
end)
AutoSection:NewToggle("Auto Sell Acc", "Auto sell accessories every 5 seconds", function(state)
    if state then
        task.spawn(function()
            while state do
                loadstring(game:HttpGet("https://raw.githubusercontent.com/CrimsonsMoons/Jasmine/refs/heads/main/auto%20sell%20acc", true))()
                task.wait(5)
            end
        end)
    end
end)

-- === Shop Buttons ===
ShopSection:NewButton("Rope", "Buys Rope from Mainland Shop", function()
    game:GetService("ReplicatedStorage"):WaitForChild("Communication", 9e9)
        :WaitForChild("Events", 9e9):GetChildren()[18]:FireServer("BuyShopItem", "Mainland Shop", 1, 1000)
end)
ShopSection:NewButton("Tin", "Buys Tin from Mainland Shop", function()
    game:GetService("ReplicatedStorage"):WaitForChild("Communication", 9e9)
        :WaitForChild("Events", 9e9):GetChildren()[18]:FireServer("BuyShopItem", "Mainland Shop", 10, 1000)
end)
ShopSection:NewButton("Craft Tin Lassos", "Crafts 1000 Tin Lassos", function()
    game:GetService("ReplicatedStorage"):WaitForChild("Communication", 9e9)
        :WaitForChild("Events", 9e9):GetChildren()[9]:FireServer("Craft", {id = 18, variants = {}, amt = 1000})
end)

-- === Lunar and Volcano Island Explorer Toggles ===
local lunarPositions = {
    Vector3.new(-3097.42, 17.63, -3681.29),
    Vector3.new(-2759.49, 6.74, -2589.20),
    Vector3.new(-2207.14, 139.06, -1223.94),
    Vector3.new(-3266.91, 15.43, -1436.57),
    Vector3.new(-3357.76, 24.35, -2428.63),
}

local volcanoPositions = {
    Vector3.new(2964.75, 108.95, -7078.36),
    Vector3.new(4134.52, 27.05, -6894.69),
    Vector3.new(4757.52, 26.14, -7939.01),
    Vector3.new(3487.49, 21.00, -8586.86),
}

local function runIslandExploreLoop(toggleRef, positions, folderName)
    task.spawn(function()
        while true do
            if toggleRef.state then
                for _, pos in ipairs(positions) do
                    if not toggleRef.state then break end
                    local folder = islandsFolder:FindFirstChild(folderName) or (explorerFolder and explorerFolder:FindFirstChild(folderName))
                    if not folder then warn(folderName .. " folder not found") break end

                    local hasBodies = false
                    for _, model in ipairs(folder:GetChildren()) do
                        local modelName = model.Name:lower()
                        if exclusions[modelName] or modelName:find("c21") then continue end
                        local body = model:FindFirstChild("Body")
                        if body and body:IsA("BasePart") and body:IsDescendantOf(workspace) then
                            hasBodies = true
                            break
                        end
                    end

                    if hasBodies then
                        for _, model in ipairs(folder:GetChildren()) do
                            if not toggleRef.state then break end
                            local modelName = model.Name:lower()
                            if exclusions[modelName] or modelName:find("c21") then continue end
                            local body = model:FindFirstChild("Body")
                            if body and body:IsA("BasePart") and body:IsDescendantOf(workspace) then
                                while toggleRef.state and body:IsDescendantOf(workspace) do
                                    hrp.CFrame = CFrame.new(body.Position + Vector3.new(0,5,0))
                                    task.wait(0.05)
                                end
                            end
                        end
                    else
                        hrp.CFrame = CFrame.new(pos + Vector3.new(0,5,0))
                        task.wait(11.5)
                    end
                end
            else
                task.wait(0.5)
            end
        end
    end)
end

local lunarToggle = { state = false }
LunarVolcanoSection:NewToggle("Lunar Island Explore", "Teleport to all bodies then positions", function(state)
    lunarToggle.state = state
end)
runIslandExploreLoop(lunarToggle, lunarPositions, "Lunar Islands")

local volcanoToggle = { state = false }
LunarVolcanoSection:NewToggle("Volcano Island Explore", "Teleport to all bodies then positions", function(state)
    volcanoToggle.state = state
end)
runIslandExploreLoop(volcanoToggle, volcanoPositions, "Volcano Island")

LunarVolcanoSection:NewButton("Remove Lava", "Removes all TouchTransmitters from Lava parts every 5 seconds", function()
    task.spawn(function()
        while true do
            local folder = islandsFolder:WaitForChild("Volcano Island"):WaitForChild("LavaParts"):WaitForChild("Folder")
            for _, part in ipairs(folder:GetChildren()) do
                if part:IsA("BasePart") then
                    for _, child in ipairs(part:GetChildren()) do
                        if child:IsA("TouchTransmitter") then
                            child:Destroy()
                        end
                    end
                end
            end
            print("All TouchInterests removed.")
            task.wait(60)
        end
    end)
end)
