local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")

local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or Players.LocalPlayer.CharacterAdded:Wait()
local Backpack = LocalPlayer:WaitForChild("Backpack")

-- Tool UUIDs
local TOOL_UUIDS = {
    "{4ba69e17-8de2-43a2-ac9a-f1d1e425be9b}",
    "{634dc3c2-1694-4273-92d2-adf8f7ade91f}",
    "{51ba4466-f758-4d1c-970d-aad27326dbaf}",
    "{06905d54-7826-417e-bfc7-82d326a30885}",
    "{7138d7c4-9482-4257-868c-4bd1fd99f529}",
    "{5dab28e4-4bfb-430b-86fe-530bafa237b5}",
}

-- Remote events
local EventFolder = ReplicatedStorage:WaitForChild("Communication"):WaitForChild("Events")
local AllRemotes = EventFolder:GetChildren()

-- Islands to scan
local IslandNames = {
    "Mainland", "Forest Island", "Mountain Island",
    "Lunar Islands", "Royal Island", "Blizzard Island",
    "Jungle Island", "Volcano Island", "Desert Island"
}

-- Exclusion UUIDs or names
local Excluded = {
    ["{84b93b68-b932-4db8-b765-d1bd9ef8aae9}"] = true,
    ["{c5769905-aecf-4d7a-ada9-064802b0cae9}"] = true,
    ["{d2227f02-c482-4911-b201-7e842b31c47c}"] = true,
    ["{6b019e60-21c6-4536-9a06-4cbfee80d88f}"] = true,
    ["{12916ad6-7fd9-46d5-8bc1-e69671249721}"] = true,
    ["{c91d0e3a-e8c6-4e70-b274-9b7304ffbb28}"] = true,
    ["Horse"] = true,
    ["Travel Boat"] = true,
}

-- Check if name looks like a UUID
local function isUUID(name)
    return typeof(name) == "string" and name:match("^%b{}$") ~= nil
end

-- Equip any tool from backpack matching tool UUID
local function equipToolMatchingUUID()
    for _, tool in ipairs(Backpack:GetChildren()) do
        if tool:IsA("Tool") then
            local toolId = tostring(tool:GetAttribute("UUID") or tool.Name)
            for _, validId in ipairs(TOOL_UUIDS) do
                if toolId == validId then
                    print("[EQUIP] Tool: " .. tool.Name)
                    tool.Parent = Character
                    return true
                end
            end
        end
    end
    warn("No tool equipped")
    return false
end

-- Main loop
task.spawn(function()
    while true do
        equipToolMatchingUUID() -- try equip each loop (for testing)
        local root = Character:FindFirstChild("HumanoidRootPart")
        if root then
            for _, islandName in ipairs(IslandNames) do
                local island = Workspace:FindFirstChild("Islands"):FindFirstChild(islandName)
                if island then
                    for _, model in ipairs(island:GetChildren()) do
                        if isUUID(model.Name) and not Excluded[model.Name] then
                            local body = model:FindFirstChild("Body")
                            if body and body:IsA("BasePart") then
                                local distance = (body.Position - root.Position).Magnitude
                                print("[TARGET] " .. model.Name .. " @ " .. islandName .. " | Distance: " .. math.floor(distance))
                                
                                -- Try all tools + all remotes
                                for _, uuid in ipairs(TOOL_UUIDS) do
                                    for _, remote in ipairs(AllRemotes) do
                                        print("[FIRE] Remote:", remote.Name, "| Tool UUID:", uuid, "| Model:", model.Name)
                                        remote:FireServer(uuid, "Activate", model)
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        task.wait(1)
    end
end)
