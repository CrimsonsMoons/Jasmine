local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

local islandFolder = workspace:WaitForChild("Islands"):WaitForChild("Volcano Island")

local function getHRP()
    local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    return character:WaitForChild("HumanoidRootPart")
end

local uuidPattern = "%b{}" -- matches {xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx}

local function findUUIDsWithTargetParts(folder, results)
    results = results or {}

    for _, child in pairs(folder:GetChildren()) do
        if child:IsA("Model") and child.Name:match(uuidPattern) then
            local hasRocks = child:FindFirstChild("Rocks")
            local hasRock = child:FindFirstChild("Rock")
            local hasMeshesRocks2 = false

            local meshesFolder = child:FindFirstChild("Meshes")
            if meshesFolder and meshesFolder:IsA("Folder") then
                local rocks2 = meshesFolder:FindFirstChild("Rocks 2")
                if rocks2 and rocks2:IsA("BasePart") then
                    hasMeshesRocks2 = true
                end
            end

            if (hasRocks and hasRocks:IsA("BasePart")) or 
               (hasRock and hasRock:IsA("BasePart")) or 
               hasMeshesRocks2 then
                table.insert(results, child)
            end
        elseif child:IsA("Folder") then
            findUUIDsWithTargetParts(child, results)
        end
    end

    return results
end

local hrp = getHRP()

while true do
    local allTargets = findUUIDsWithTargetParts(islandFolder)

    for _, uuidModel in ipairs(allTargets) do
        local targetPart = nil

        if uuidModel:FindFirstChild("Rocks") and uuidModel.Rocks:IsA("BasePart") then
            targetPart = uuidModel.Rocks
        elseif uuidModel:FindFirstChild("Rock") and uuidModel.Rock:IsA("BasePart") then
            targetPart = uuidModel.Rock
        else
            local meshesFolder = uuidModel:FindFirstChild("Meshes")
            if meshesFolder then
                local rocks2 = meshesFolder:FindFirstChild("Rocks 2")
                if rocks2 and rocks2:IsA("BasePart") then
                    targetPart = rocks2
                end
            end
        end

        if targetPart then
            hrp.CFrame = targetPart.CFrame + Vector3.new(0, 5, 0)
            wait(0.3)
        end
    end
end
